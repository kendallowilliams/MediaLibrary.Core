@model MediaLibrary.WebUI.Models.PlayerViewModel

@{
    ViewBag.Title = "Player";
}

<div class="d-flex flex-column" style="flex: 1 1 auto; overflow-y: auto">
    <div style="flex: 0 0 auto">
        <div class="d-flex flex-row">
            <div style="flex: 0 0 auto"><h4>Now Playing</h4></div>
            <div style="flex: 1 1 auto; overflow-x: auto">
                <h4 id="@(HtmlControlsRepository.NowPlayingTitleId)" class="text-truncate"></h4>
            </div>
            <div class="p-1" style="flex: 0 0 auto">
                <button id="@(HtmlControlsRepository.PlayerAudioVisualizerButtonId)" class="btn btn-sm btn-outline-secondary @(Model.Configuration.AudioVisualizerEnabled ? "active" : string.Empty)"
                        data-tooltip="tooltip" title="Toggle audio visualizer">
                    <i class="fa fa-eye"></i>
                </button>
                <button id="@(HtmlControlsRepository.PlayerClearButtonId)" class="btn btn-sm btn-outline-danger" title="Clear now playing" data-tooltip="tooltip">
                    <i class="fa fa-trash"></i>
                </button>
            </div>
        </div>
        <hr />
    </div>
    <div class="card" style="flex: 1 1 auto; overflow-y: auto">
        <div class="card-body d-flex m-0 p-0 rounded-top" style="flex: 1 1 auto; overflow-y: auto">
            <div id="@(HtmlControlsRepository.PlayerItemsContainerId)" class="@(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Index ? string.Empty : "d-none")" style="flex: 1 1 auto; overflow-y: auto"></div>
            <div id="@(HtmlControlsRepository.PlayerAudioContainerId)" style="flex: 1 1 auto; display: flex; overflow-x: auto" class="@(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Audio ? string.Empty : "d-none") flex-column">
                <audio id="@(HtmlControlsRepository.MusicPlayerId)" class="d-none" @(Model.Configuration.Muted ? "muted=\"muted\"" : string.Empty) preload="metadata" data-player-page="@(Enums.PlayerPages.Audio)"></audio>
                <canvas id="@(HtmlControlsRepository.AudioVisualizerId)"></canvas>
            </div>
            <div id="@(HtmlControlsRepository.PlayerVideoContainerId)" style="flex: 1 1 auto; background-color: black" class="embed-responsive @(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Video ? string.Empty : "d-none")">
                <video id="@(HtmlControlsRepository.VideoPlayerId)" @(Model.Configuration.Muted ? "muted=\"muted\"" : string.Empty) preload="metadata" data-player-page="@(Enums.PlayerPages.Video)" class="embed-responsive-item"></video>
            </div>
        </div>
        <div class="card-footer d-flex align-items-center" style="flex: 0 0 auto">
            <div class="" style="flex: 0 0 auto">
                <button id="@(HtmlControlsRepository.PlayerPreviousButtonId)" class="btn btn-sm btn-outline-secondary"><i class="fa fa-step-backward"></i></button>
                <button id="@(HtmlControlsRepository.PlayerBackwardButtonId)" class="btn btn-sm btn-outline-secondary d-none d-lg-inline-block"><i class="fa fa-backward"></i></button>
                <button id="@(HtmlControlsRepository.PlayerPlayButtonId)" class="btn btn-outline-secondary"><i class="fa fa-play"></i></button>
                <button id="@(HtmlControlsRepository.PlayerPauseButtonId)" class="btn btn-outline-secondary d-none"><i class="fa fa-pause"></i></button>
                <button id="@(HtmlControlsRepository.PlayerForwardButtonId)" class="btn btn-sm btn-outline-secondary d-none d-lg-inline-block"><i class="fa fa-forward"></i></button>
                <button id="@(HtmlControlsRepository.PlayerNextButtonId)" class="btn btn-sm btn-outline-secondary"><i class="fa fa-step-forward"></i></button>
            </div>
            <div class="d-flex mr-3 ml-3 flex-row align-items-center justify-content-center justify-content-lg-end" style="flex: 1 1 auto">
                <div id="@(HtmlControlsRepository.PlayerSliderId)" class="mr-3 d-none d-lg-block" style="flex: 1 1 auto" data-slide-started="false"></div>
                <div id="@(HtmlControlsRepository.PlayerTimeId)" class="text-muted" style="flex: 0 0 auto">00:00/00:00</div>
            </div>
            <div style="flex: 0 0 auto">
                <button id="@(HtmlControlsRepository.PlayerPlaylistToggleButtonId)" class="btn btn-sm btn-outline-secondary @(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Index ? "active" : string.Empty)">
                    <i class="fa fa-list-ul"></i>
                </button>
                <span class="d-none d-lg-inline-block">
                    <button id="@(HtmlControlsRepository.PlayerShuffleButtonId)" class="btn btn-sm btn-outline-secondary"><i class="fa fa-random"></i></button>
                    <button id="@(HtmlControlsRepository.PlayerRepeatButtonId)" data-repeat-type="@(nameof(Enums.RepeatTypes.None))" class="btn btn-sm btn-outline-secondary @(Model.Configuration.Repeat == Enums.RepeatTypes.None ? string.Empty : "d-none")">
                        <i class="fa fa-sync"></i>
                    </button>
                    <button id="@(HtmlControlsRepository.PlayerRepeatOneButtonId)" data-repeat-type="@(nameof(Enums.RepeatTypes.RepeatOne))" class="btn btn-sm btn-outline-secondary active @(Model.Configuration.Repeat == Enums.RepeatTypes.RepeatOne ? string.Empty : "d-none")">
                        <i class="fa fa-xs fa-sync"><sub>1</sub></i>
                    </button>
                    <button id="@(HtmlControlsRepository.PlayerRepeatAllButtonId)" data-repeat-type="@(nameof(Enums.RepeatTypes.RepeatAll))" class="btn btn-sm btn-outline-secondary active @(Model.Configuration.Repeat == Enums.RepeatTypes.RepeatAll ? string.Empty : "d-none")">
                        <i class="fa fa-sync"></i>
                    </button>
                </span>
                <span id="@(HtmlControlsRepository.PlayerVolumeContainerId)">
                    <button id="@(HtmlControlsRepository.PlayerVolumeButtonId)" class="btn btn-sm btn-outline-secondary @(Model.Configuration.Muted ? "d-none" : string.Empty)"
                            data-volume="@(Model.Configuration.Volume)">
                        <i class="fa fa-volume-up"></i>
                    </button>
                    <button id="@(HtmlControlsRepository.PlayerMuteButtonId)" class="btn btn-sm btn-outline-secondary active @(Model.Configuration.Muted ? string.Empty : "d-none")">
                        <i class="fa fa-volume-mute"></i>
                    </button>
                </span>
                <button id="@(HtmlControlsRepository.PlayerFullscreenButtonId)" class="btn btn-sm btn-outline-secondary @(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Video ? string.Empty : "d-none")">
                    <i class="fa fa-expand"></i>
                </button>
            </div>
        </div>
    </div>
</div>