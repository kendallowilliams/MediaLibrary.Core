@model PodcastConfiguration

@{ 
    SelectList podcastSortList = new SelectList(PodcastRepository.GetPodcastSortItems(), "Value", "Name"),
        podcastFilterList = new SelectList(PodcastRepository.GetPodcastFilterItems(), "Value", "Name");
}

<div class="d-flex flex-column flex-fill overflow-auto">
    <div class="row m-0 p-0 mb-3">
        <div class="col-auto border-right">
            <h6 style="width: 100px">Interface</h6>
        </div>
        <div class="col">
            <div class="row">
                <div class="col">
                    <div class="mb-3">
                        @Html.LabelFor(x => x.SelectedPodcastSort, "Podcast Sort", new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.SelectedPodcastSort, podcastSortList, null, new { @class = "form-select form-select-sm" })
                    </div>
                    <div>
                        @Html.LabelFor(x => x.SelectedPodcastFilter, "Episode Filter", new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.SelectedPodcastFilter, podcastFilterList, null, new { @class = "form-select form-select-sm" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row m-0 p-0">
        <div class="col-auto border-right">
            <h6 style="width: 100px">Actions</h6>
        </div>
        <div class="col">
            <div class="mb-3">
                <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-tooltip="tooltip" title="Refresh"
                        data-podcast-settings-action="refresh">
                    <i class="fa fa-sync"></i>
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-tooltip="tooltip" title="Add podcast"
                        data-podcast-settings-action="add"><i class="fa fa-plus"></i></button>
            </div>
        </div>
    </div>
</div>