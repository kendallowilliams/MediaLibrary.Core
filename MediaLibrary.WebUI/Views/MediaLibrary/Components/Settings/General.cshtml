@model MediaLibraryConfiguration
@using MediaLibrary.DAL.Services.Interfaces;
@inject IDataService DataService;

<div class="d-flex flex-column flex-fill overflow-auto">
    @Html.HiddenFor(x => x.SelectedMediaPage)
    <div class="row m-0 p-0 mb-3">
        <div class="col-auto border-right">
            <h6 style="width: 100px">System Info</h6>
        </div>
        <div class="col">
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label>Database Name</label>
                        @Html.TextBox("DatabaseName", DataService.GetDbName(), new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        <label>Database Server</label>
                        @Html.TextBox("DatabaseServer", DataService.GetDbServer(), new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        <label>Console App Last Run</label>
                        @Html.TextBoxFor(x => x.ConsoleAppLastRunTimeStamp, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row m-0 p-0">
        <div class="col-auto border-right">
            <h6 style="width: 100px">Interface</h6>
        </div>
        <div class="col">
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label>App Width</label>
                        @Html.DropDownListFor(x => x.AppWidth, new SelectList(Enum.GetValues(typeof(Enums.AppWidth))), null, new { @class = "custom-select" })
                    </div>
                    <div class="form-group">
                        <label>NavBar Auto-Hide Delay (seconds)</label>
                        @Html.TextBoxFor(x => x.NavBarDelay, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="form-group">
                        <label>Settings Auto-Hide Delay (seconds)</label>
                        @Html.TextBoxFor(x => x.SettingsDelay, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="form-group">
                        <label>Console App Interval (minutes)</label>
                        @Html.TextBoxFor(x => x.ConsoleAppRunInterval, new { @class = "form-control", type = "number" })
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.CheckBoxFor(x => x.TooltipsEnabled, new { @class = "form-check-input" })
                        @Html.LabelFor(x => x.TooltipsEnabled, "Tooltips Enabled", new { @class = "form-check-label" })
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.CheckBoxFor(x => x.KeysEnabled, new { @class = "form-check-input" })
                        @Html.LabelFor(x => x.KeysEnabled, "Keys Enabled", new { @class = "form-check-label" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>