@model PlaylistConfiguration

@{
    var playlistSortItems = PlaylistRepository.GetPlaylistSortItems()
                                              .Select(item => new SelectListItem { Text = item.Name, Value = item.Value.ToString() });
}

<div class="d-flex flex-column flex-fill overflow-auto">
    <div class="row m-0 p-0">
        <div class="col-auto border-end">
            <h6>Interface</h6>
        </div>
        <div class="col">
            <div class="row">
                <div class="col">
                    <div class="mb-3">
                        @Html.LabelFor(x => x.MaxSystemPlaylistItems, "Max Playlist Items", new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.MaxSystemPlaylistItems, new { @class = "form-control form-control-sm", type = "number", step = "1", min = "1" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(x => x.SelectedMusicPlaylistSort, "Music Sort", new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.SelectedMusicPlaylistSort, playlistSortItems, null, new { @class = "form-select form-select-sm" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(x => x.SelectedPodcastPlaylistSort, "Podcast Sort", new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.SelectedPodcastPlaylistSort, playlistSortItems, null, new { @class = "form-select form-select-sm" })
                    </div>
                    <div>
                        @Html.LabelFor(x => x.SelectedTelevisionPlaylistSort, "Television Sort", new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.SelectedTelevisionPlaylistSort, playlistSortItems, null, new { @class = "form-select form-select-sm" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>