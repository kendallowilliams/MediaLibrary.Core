@model MediaLibrary.WebUI.Models.PlaylistViewModel

@{
    var musicPlaylistGroups = Model.PlaylistGroups.Where(group => group.Any(playlist => playlist.Type == (int)Enums.PlaylistTabs.Music));
    var podcastPlaylistGroups = Model.PlaylistGroups.Where(group => group.Any(playlist => playlist.Type == (int)Enums.PlaylistTabs.Podcast));
    var episodePlaylistGroups = Model.PlaylistGroups.Where(group => group.Any(playlist => playlist.Type == (int)Enums.PlaylistTabs.Television));

    ViewBag.Title = "Playlists";
}

<div class="d-flex flex-column text-truncate" style="overflow-y: auto">
    <div>
        <h4>Playlists</h4>
        <div class="nav d-flex p-1" id="@(HtmlControlsRepository.PlaylistTabListId)" role="tablist">
            <div class="flex-fill">
                <a class="btn btn-sm btn-outline-secondary" id="@(HtmlControlsRepository.MusicPlaylistContainerId)-tab" data-toggle="tab"
                   role="tab" title="@(nameof(Enums.PlaylistTabs.Music))" data-playlist-tab="@(nameof(Enums.PlaylistTabs.Music))"
                   data-tooltip="tooltip" href="#@(HtmlControlsRepository.MusicPlaylistContainerId)">
                    <i class="fa fa-music"></i>
                </a>
                <a class="btn btn-sm btn-outline-secondary" id="@(HtmlControlsRepository.PodcastPlaylistContainerId)-tab" data-toggle="tab"
                   role="tab" title="@(nameof(Enums.PlaylistTabs.Podcast))" data-playlist-tab="@(nameof(Enums.PlaylistTabs.Podcast))"
                   data-tooltip="tooltip" href="#@(HtmlControlsRepository.PodcastPlaylistContainerId)">
                    <i class="fa fa-podcast"></i>
                </a>
                <a class="btn btn-sm btn-outline-secondary" id="@(HtmlControlsRepository.EpisodePlaylistContainerId)-tab" data-toggle="tab"
                   role="tab" title="@(nameof(Enums.PlaylistTabs.Television))" data-playlist-tab="@(nameof(Enums.PlaylistTabs.Television))"
                   data-tooltip="tooltip" href="#@(HtmlControlsRepository.EpisodePlaylistContainerId)">
                    <i class="fa fa-tv"></i>
                </a>
            </div>
            <div>
                <button type="button" class="btn btn-sm btn-outline-secondary" data-toggle="modal" data-target="#@(HtmlControlsRepository.NewPlaylistModalId)" data-tooltip="tooltip" title="Add playlist"><i class="fa fa-plus"></i></button>
                <button class="btn btn-sm btn-outline-secondary" data-toggle="modal" data-target="#@(HtmlControlsRepository.SettingsModalId)" data-tooltip="tooltip" title="Settings">
                    <i class="fa fa-cog"></i>
                </button>
            </div>
        </div>
        <hr />
    </div>
    <div class="tab-content flex-fill" style="overflow-y: auto">
        <div class="tab-pane fade" id="@(HtmlControlsRepository.MusicPlaylistContainerId)" role="tabpanel">
            @if (musicPlaylistGroups.Any())
            {
                <div id="accordion-playlists-@(Enums.PlaylistTabs.Music)" style="overflow-y: auto" class="accordion flex-fill">
                    @foreach (var item in musicPlaylistGroups.Select((group, index) => new { Index = index, Group = group }))
                    {
                        <div class="card">
                            <div class="card-header p-0" id="heading-playlists-@(item.Index)">
                                <h5 class="mb-0">
                                    <button class="btn btn-sm btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)">
                                        @(item.Group.Key)
                                    </button>
                                </h5>
                            </div>

                            <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == 0 ? "show" : "")" data-parent="#accordion-playlists-@(Enums.PlaylistTabs.Music)">
                                <ul class="list-group list-group-flush">
                                    @foreach (var playlist in item.Group.Where(playlist => playlist.Type == (int)Enums.PlaylistTabs.Music))
                                    {
                                        <li class="list-group-item">
                                            <div class="media">
                                                <img class="mr-3 track-img" src="@(Url.Content("~/images/audio.png"))" title="@(playlist.Name)">
                                                <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                    <span class="mt-0 text-truncate font-weight-bold">@(playlist.Name)</span>
                                                    <small>@(playlist.Description)</small>
                                                </div>
                                                <div>
                                                    <button class="btn btn-sm btn-outline-secondary" data-playlist-id="@(playlist.Id)" data-tooltip="tooltip" title="View playlist">
                                                        <i class="fa fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger @(playlist.Id < 0 ? "d-none" : string.Empty)" data-item-id="@(playlist.Id)" data-playlist-action="delete" data-tooltip="tooltip" title="Delete playlist">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div>No playlists.</div>
            }
        </div>
        <div class="tab-pane fade" id="@(HtmlControlsRepository.PodcastPlaylistContainerId)" role="tabpanel">
            @if (podcastPlaylistGroups.Any())
            {
                <div id="accordion-playlists-@(Enums.PlaylistTabs.Podcast)" style="overflow-y: auto" class="accordion flex-fill">
                    @foreach (var item in podcastPlaylistGroups.Select((group, index) => new { Index = index + musicPlaylistGroups.Count(), Group = group }))
                    {
                        <div class="card">
                            <div class="card-header p-0" id="heading-playlists-@(item.Index)">
                                <h5 class="mb-0">
                                    <button class="btn btn-sm btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)">
                                        @(item.Group.Key)
                                    </button>
                                </h5>
                            </div>

                            <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == musicPlaylistGroups.Count() ? "show" : "")" data-parent="#accordion-playlists-@(Enums.PlaylistTabs.Podcast)">
                                <ul class="list-group list-group-flush">
                                    @foreach (var playlist in item.Group.Where(playlist => playlist.Type == (int)Enums.PlaylistTabs.Podcast))
                                    {
                                        <li class="list-group-item">
                                            <div class="media">
                                                <img class="mr-3 track-img" src="@(Url.Content("~/images/audio.png"))" title="@(playlist.Name)">
                                                <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                    <span class="mt-0 text-truncate font-weight-bold">@(playlist.Name)</span>
                                                    <small>@(playlist.Description)</small>
                                                </div>
                                                <div>
                                                    <button class="btn btn-sm btn-outline-secondary" data-playlist-id="@(playlist.Id)" data-tooltip="tooltip" title="View playlist">
                                                        <i class="fa fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger @(playlist.Id < 0 ? "d-none" : string.Empty)" data-item-id="@(playlist.Id)" data-playlist-action="delete" data-tooltip="tooltip" title="Delete playlist">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div>No playlists.</div>
            }
        </div>
        <div class="tab-pane fade" id="@(HtmlControlsRepository.EpisodePlaylistContainerId)" role="tabpanel">
            @if (episodePlaylistGroups.Any())
            {
                <div id="accordion-playlists-@(Enums.PlaylistTabs.Television)" style="overflow-y: auto" class="accordion flex-fill">
                    @foreach (var item in episodePlaylistGroups.Select((group, index) => new { Index = index + musicPlaylistGroups.Count() + podcastPlaylistGroups.Count(), Group = group }))
                    {
                        <div class="card">
                            <div class="card-header p-0" id="heading-playlists-@(item.Index)">
                                <h5 class="mb-0">
                                    <button class="btn btn-sm btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)">
                                        @(item.Group.Key)
                                    </button>
                                </h5>
                            </div>

                            <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == musicPlaylistGroups.Count() + podcastPlaylistGroups.Count() ? "show" : "")" 
                                 data-parent="#accordion-playlists-@(Enums.PlaylistTabs.Television)">
                                <ul class="list-group list-group-flush">
                                    @foreach (var playlist in item.Group.Where(playlist => playlist.Type == (int)Enums.PlaylistTabs.Television))
                                    {
                                        <li class="list-group-item">
                                            <div class="media">
                                                <img class="mr-3 track-img" src="@(Url.Content("~/images/audio.png"))" title="@(playlist.Name)">
                                                <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                    <span class="mt-0 text-truncate font-weight-bold">@(playlist.Name)</span>
                                                    <small>@(playlist.Description)</small>
                                                </div>
                                                <div>
                                                    <button class="btn btn-sm btn-outline-secondary" data-playlist-id="@(playlist.Id)" data-tooltip="tooltip" title="View playlist">
                                                        <i class="fa fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger @(playlist.Id < 0 ? "d-none" : string.Empty)" data-item-id="@(playlist.Id)" data-playlist-action="delete" data-tooltip="tooltip" title="Delete playlist">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div>No playlists.</div>
            }
        </div>
    </div>

</div>

<partial name="~/Views/Shared/Modals/AddNewPlaylistModal.cshtml" />