@model MediaLibrary.WebUI.Models.TransactionViewModel

@{
    Layout = "~/Views/Shared/_LayoutBlank.cshtml";
    ViewBag.Title = "Transactions";

    Func<string, string, string, string> getDetails = (status, error, message) =>
        $"<div><pre>Status: {status}</pre><pre>Error: {error}</pre><pre>Message: {message}</pre></div>";
}

<div class="d-flex flex-column flex-fill overflow-auto">
    <h4>Transactions</h4>
    <div><hr /></div>
    <div class="row m-0 p-0 overflow-auto flex-fill">
        <div class="col-auto border-right">
            @using (Html.BeginForm(FormMethod.Post))
            {
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-text" style="width: 100px">From</div>
                    @Html.TextBoxFor(x => x.FromDate, new { type = "date", @class = "form-control", max = DateTime.Now.ToString("yyyy-MM-dd") })
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-text" style="width: 100px">To</div>
                    @Html.TextBoxFor(x => x.ToDate, new { type = "date", @class = "form-control", max = DateTime.Now.ToString("yyyy-MM-dd") })
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-text" style="width: 100px">Type</div>
                    @Html.ListBoxFor(x => x.SelectedTransactionTypes, new MultiSelectList(Model.TransactionTypes), new { @class = "custom-select" })
                </div>
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-text" style="width: 100px">Status</div>
                    @Html.ListBoxFor(x => x.SelectedTransactionStatuses, new MultiSelectList(Model.TransactionStatuses), new { @class = "custom-select" })
                </div>
                <div class="text-right">
                    <button class="btn btn-sm btn-outline-secondary"><i class="fa fa-search"></i></button>
                </div>
            }
        </div>
        <div class="col h-100" style="overflow-y: auto">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th class="text-center">@nameof(Transaction.Id)</th>
                        <th class="text-center">@nameof(Transaction.Type)</th>
                        <th class="text-center">@nameof(Transaction.Status)</th>
                        <th class="text-center">Details</th>
                        <th class="text-center">@nameof(Transaction.CreateDate)</th>
                        <th class="text-center">@nameof(Transaction.ModifyDate)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.Transactions)
                    {
                        string details = getDetails(transaction.StatusMessage, transaction.ErrorMessage, transaction.Message);

                        <tr>
                            <td class="text-center">@transaction.Id</td>
                            <td class="text-center">@Enum.GetName(typeof(MediaLibrary.Shared.Enums.TransactionTypes), transaction.Type)</td>
                            <td class="text-center">
                                <span>@Enum.GetName(typeof(MediaLibrary.Shared.Enums.TransactionStatus), transaction.Status)</span>
                            </td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="alertDetails(this)" data-details="@details"><i class="fa fa-info-circle"></i></button>
                            </td>
                            <td class="text-center">@transaction.CreateDate</td>
                            <td class="text-center">@transaction.ModifyDate</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript" defer="defer">
        function alertDetails(btn) {
            const $btn = $(btn);

            MessageBox.alert('Details', $btn.attr('data-details'), true);
        }
    </script>
}