@model MediaLibrary.WebUI.Models.PodcastViewModel

<div class="d-flex flex-column flex-fill" style="overflow-y: auto">
    <div class="d-flex flex-column">
        <h4>Podcasts</h4>
        <div class="d-flex flex-row p-1">
            <div class="flex-fill"></div>
            <div>
                <button type="button" class="btn btn-sm btn-outline-secondary @(HtmlControlsRepository.PlaybackContinueButtonsClass)"
                        data-bs-tooltip="tooltip" title="Continue playing" data-page="@Enums.MediaTypes.Podcast">
                    <i class="fa fa-play-circle"></i>
                </button>
                <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#@(HtmlControlsRepository.SettingsModalId)" data-bs-tooltip="tooltip" title="Settings">
                    <i class="fa fa-cog"></i>
                </button>
            </div>
        </div>
        <div><hr /></div>
    </div>

    @if (Model.PodcastGroups.Any())
    {
        <div id="accordion-podcasts" style="overflow-y: auto" class="accordion flex-fill">
            @foreach (var item in Model.PodcastGroups.Select((group, index) => new { Index = index, Group = group }))
            {
                <div class="accordion-item">
                    <div class="accordion-header p-0" id="heading-podcasts-@(item.Index)">
                        <h5 class="m-0">
                            <button class="accordion-button w-100 text-left p-1 @(item.Index == 0 ? string.Empty : "collapsed")" data-bs-toggle="collapse" data-bs-target="#collapse-podcasts-@(item.Index)">
                                @(item.Group.Key)
                            </button>
                        </h5>
                    </div>

                    <div id="collapse-podcasts-@(item.Index)" class="accordion-collapse collapse @(item.Index == 0 ? "show" : "")" data-bs-parent="#accordion-podcasts">
                        <div class=" accordion-body p-0 pb-1">
                            <ul class="list-group list-group-flush">
                                @foreach (var podcast in item.Group)
                                {
                                    <li class="list-group-item">
                                        <div class="media">
                                            <img class="me-3 track-img" src="@(Url.Content("~/images/audio.png"))" title="@(podcast.Title)">
                                            <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                <span class="mt-0 text-truncate font-weight-bold">@(podcast.Title)</span>
                                                <small>@(podcast.PodcastItems.Count()) episode@(podcast.PodcastItems.Count() == 1 ? string.Empty : "s")</small>
                                            </div>
                                            <div>
                                                <button class="btn btn-sm btn-outline-secondary d-none" data-bs-tooltip="tooltip" title="@(podcast.Description)" data-placement="left"
                                            data-html="true">
                                                    <i class="fa fa-info-circle"></i>
                                                </button>
                                                <buton class="btn btn-sm btn-outline-secondary" data-podcast-id="@(podcast.Id)" data-bs-tooltip="tooltip" title="View podcast">
                                                    <i class="fa fa-list"></i>
                                                </buton>
                                                <button class="btn btn-sm btn-outline-danger" data-podcast-action="delete" data-item-id="@(podcast.Id)" data-bs-tooltip="tooltip" title="Delete podcast">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div>No podcasts.</div>
    }
</div>