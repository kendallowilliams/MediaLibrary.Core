@model (PodcastItem PodcastItem, bool IsDownloading)

@{
    string unique = Guid.NewGuid().ToString("N");
}

<div class="d-flex flex-column" data-podcast-item-options="@(Model.PodcastItem.Id)">
    @if (!Model.PodcastItem.LastPlayedDate.HasValue)
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-mark-played-action="@(Url.Action(nameof(PodcastController.MarkPodcastItemPlayed), "Podcast"))"
                data-podcast-action="mark-played" data-item-id="@(Model.PodcastItem.Id)">
            Mark as played
        </button>
    }
    else
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-mark-played-action="@(Url.Action(nameof(PodcastController.MarkPodcastItemUnplayed), "Podcast"))"
                data-podcast-action="mark-played" data-item-id="@(Model.PodcastItem.Id)">
            Mark as unplayed
        </button>
    }

    @if (string.IsNullOrWhiteSpace(Model.PodcastItem.File) && !Model.IsDownloading)
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-download-action="@(Url.Action(nameof(PodcastController.DownloadPodcastItem), "Podcast"))"
                data-podcast-action="download" data-item-id="@(Model.PodcastItem.Id)">
            Download
        </button>
    }
    else
    {
        <button class="btn btn-sm btn-outline-secondary mb-1 @(Model.IsDownloading ? string.Empty : "d-none")" disabled="disabled"
                data-item-id="@(Model.PodcastItem.Id)" data-podcast-action="downloading">
            Downloading <i class="fa fa-spinner fa-pulse"></i>
        </button>
        <button class="btn btn-sm btn-outline-secondary mb-1 @(Model.IsDownloading ? "d-none" : string.Empty)"
                data-download-action="@(Url.Action(nameof(PodcastController.RemovePodcastItemDownload), "Podcast"))"
                data-podcast-action="download" data-item-id="@(Model.PodcastItem.Id)">
            Remove Download
        </button>
    }

    <button class="btn btn-sm btn-outline-secondary mb-1" data-podcast-action="show-description" data-title="@(Model.PodcastItem.Title)" 
            data-message="@(Model.PodcastItem.Description)">Description</button>
</div>