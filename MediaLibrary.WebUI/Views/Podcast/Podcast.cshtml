@model MediaLibrary.WebUI.Models.PodcastViewModel

@{
    IEnumerable<int> years = Model.SelectedPodcast.PodcastItems.Select(item => item.PublishDate.Year).Distinct().OrderByDescending(year => year);
}

<div class="d-flex flex-column flex-fill" style="overflow-y: auto">
    <div>
        <div class="d-flex flex-row">
            <div class="flex-shrink-1" style="overflow-x: auto">
                <h4 class="text-truncate">
                    @(Model.SelectedPodcast.Title) @(!Model.SelectedPodcast.Title.ToLower().Contains("podcast") ? "podcast" : string.Empty)
                </h4>
            </div>
        </div>
        <div class="p-1">
            <button class="btn btn-sm btn-outline-secondary" data-back-button="podcast" data-tooltip="tooltip" title="Go back"><i class="fa fa-arrow-circle-left"></i></button>
            <button class="btn btn-sm btn-outline-secondary" data-podcast-action="refresh" data-tooltip="tooltip" title="Refresh podcast"><i class="fa fa-sync"></i></button>
            <button class="btn btn-sm btn-outline-danger" data-podcast-action="delete" data-tooltip="tooltip" title="Delete podcast" data-item-id="@(Model.SelectedPodcast.Id)">
                <i class="fa fa-trash"></i>
            </button>
            @Html.DropDownListFor(x => x.Configuration.SelectedPodcastFilter,
                         Model.PodcastFilterItems,
                         null,
                         new { @class = "form-control form-control-sm border border-secondary float-right align-middle",
                               style = "width: 150px",
                               title = "Filter by",
                               data_podcast_action = "filter",
                               data_tooltip = "tooltip"
            })
        </div>
        <hr />
    </div>
    <div class="card flex-fill" style="overflow-y: auto">
        <div class="card-header" id="heading-podcast-@(Model.SelectedPodcast.Id)">
            <ul class="pagination justify-content-center m-0">
                <li class="page-item pagination-sm"><a class="page-link" href="javascript: void(0);" data-podcast-year="-">&laquo;</a></li>
                @foreach (var item in years.Select((year, index) => new { Index = index, Year = year }))
                {
                    <li class="page-item pagination-sm"><a class="page-link" href="javascript: void(0);" data-item-index="@(item.Index + 1)" data-podcast-year="@(item.Year)">@(item.Year)</a></li>
                }
                <li class="page-item pagination-sm"><a class="page-link" href="javascript: void(0);" data-podcast-year="+">&raquo;</a></li>
            </ul>
        </div>
        <div class="card-body m-0 p-0 flex-fill" id="@(HtmlControlsRepository.PodcastViewId)" style="overflow-y: auto"
             data-podcast-years="@(string.Join(",", years))"></div>
    </div>
</div>
